<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="FlyrigLoader Test Coverage Report Dashboard - Comprehensive neuroscience data loading library coverage analysis">
    <meta name="author" content="FlyrigLoader Coverage Enhancement System">
    <meta name="keywords" content="flyrigloader, test coverage, neuroscience, data loading, pytest, python">
    <meta name="robots" content="noindex, nofollow">
    
    <title>{{ config.report_formats.html.title | default('FlyrigLoader Test Coverage Report') }}</title>
    
    <!-- Preload critical fonts for enhanced performance -->
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&family=Fira+Code:wght@400;500&display=swap" as="style">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&family=Fira+Code:wght@400;500&display=swap" rel="stylesheet">
    
    <!-- Include shared coverage reporting styles -->
    <link rel="stylesheet" href="style.css">
    
    <!-- Favicon and app icons -->
    <link rel="icon" type="image/svg+xml" href="/static/flyrigloader_icon.svg">
    <link rel="apple-touch-icon" href="/static/flyrigloader_icon_180.png">
    
    <!-- Open Graph meta tags for sharing -->
    <meta property="og:title" content="{{ config.report_formats.html.title | default('FlyrigLoader Coverage Report') }}">
    <meta property="og:description" content="{{ config.report_formats.html.description | default('Comprehensive test coverage analysis for neuroscience experimental data loading library') }}">
    <meta property="og:type" content="website">
    
    <!-- Structured data for machine readability -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "SoftwareApplication",
        "name": "FlyrigLoader Coverage Dashboard",
        "description": "{{ config.report_formats.html.description | default('Comprehensive test coverage analysis for neuroscience experimental data loading library') }}",
        "applicationCategory": "DeveloperApplication",
        "operatingSystem": "Cross-platform",
        "programmingLanguage": "Python",
        "creator": {
            "@type": "Organization",
            "name": "{{ config.metadata.organization | default('Research Team') }}"
        },
        "url": "{{ config.metadata.repository_url | default('#') }}",
        "version": "{{ report.library_version | default('1.0.0') }}",
        "datePublished": "{{ report.timestamp | default('') }}",
        "softwareRequirements": {{ config.metadata.python_versions | tojson | default('["3.8+"]') }}
    }
    </script>
    
    <!-- CSS Variables Configuration from report config -->
    <style>
    :root {
        /* FlyrigLoader Neuroscience Research Brand Colors */
        --fl-primary: {{ config.report_formats.html.styling.primary_color | default('#2E7D32') }};
        --fl-secondary: {{ config.report_formats.html.styling.secondary_color | default('#1976D2') }};
        --fl-accent: {{ config.report_formats.html.styling.accent_color | default('#FF5722') }};
        --fl-success: {{ config.report_formats.html.styling.success_color | default('#4CAF50') }};
        --fl-warning: {{ config.report_formats.html.styling.warning_color | default('#FF9800') }};
        --fl-error: {{ config.report_formats.html.styling.error_color | default('#F44336') }};
        --fl-background: {{ config.report_formats.html.styling.background_color | default('#FAFAFA') }};
        --fl-surface: #FFFFFF;
        --fl-text: {{ config.report_formats.html.styling.text_color | default('#333333') }};
        --fl-text-secondary: #666666;
        --fl-border: #E0E0E0;
        
        /* Coverage Quality Level Colors */
        --coverage-excellent: #2E7D32;   /* 95-100% */
        --coverage-good: #4CAF50;        /* 85-94% */
        --coverage-acceptable: #FF9800;  /* 70-84% */
        --coverage-poor: #FF5722;        /* 50-69% */
        --coverage-critical: #F44336;    /* <50% */
        
        /* Neuroscience Domain Specific Colors */
        --neuroscience-signal: #1976D2;      /* Signal processing modules */
        --neuroscience-data: #2E7D32;        /* Data loading modules */
        --neuroscience-analysis: #FF5722;    /* Analysis modules */
        --neuroscience-config: #9C27B0;      /* Configuration modules */
        --neuroscience-util: #607D8B;        /* Utility modules */
        
        /* Animation and interaction settings */
        --transition-fast: 150ms ease-in-out;
        --transition-standard: 250ms ease-in-out;
        --shadow-elevation-1: 0 1px 3px rgba(0, 0, 0, 0.12);
        --shadow-elevation-2: 0 4px 6px rgba(0, 0, 0, 0.15);
        --shadow-elevation-3: 0 10px 20px rgba(0, 0, 0, 0.15);
        
        /* Quality gate status indicators */
        --gate-passing: #4CAF50;
        --gate-failing: #F44336;
        --gate-warning: #FF9800;
        --gate-pending: #9E9E9E;
    }
    
    /* Enhanced dashboard-specific styling */
    .dashboard-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 24px;
        margin: 24px 0;
    }
    
    .dashboard-card {
        background: var(--fl-surface);
        border-radius: 12px;
        box-shadow: var(--shadow-elevation-2);
        padding: 24px;
        transition: all var(--transition-standard);
        border: 1px solid var(--fl-border);
        position: relative;
        overflow: hidden;
    }
    
    .dashboard-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--fl-primary);
        transition: background var(--transition-fast);
    }
    
    .dashboard-card:hover {
        transform: translateY(-4px);
        box-shadow: var(--shadow-elevation-3);
    }
    
    .dashboard-card.critical::before { background: var(--coverage-critical); }
    .dashboard-card.poor::before { background: var(--coverage-poor); }
    .dashboard-card.acceptable::before { background: var(--coverage-acceptable); }
    .dashboard-card.good::before { background: var(--coverage-good); }
    .dashboard-card.excellent::before { background: var(--coverage-excellent); }
    
    /* Coverage visualization enhancements */
    .coverage-ring {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        background: conic-gradient(
            var(--coverage-excellent) 0deg,
            var(--coverage-excellent) calc(var(--coverage-percentage, 0) * 3.6deg),
            var(--fl-border) calc(var(--coverage-percentage, 0) * 3.6deg),
            var(--fl-border) 360deg
        );
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        margin: 0 auto 16px;
    }
    
    .coverage-ring::before {
        content: '';
        position: absolute;
        width: 80px;
        height: 80px;
        background: var(--fl-surface);
        border-radius: 50%;
    }
    
    .coverage-percentage {
        position: relative;
        z-index: 1;
        font-size: 24px;
        font-weight: 700;
        color: var(--fl-text);
    }
    
    /* Module category organization */
    .module-category {
        margin-bottom: 32px;
        background: var(--fl-surface);
        border-radius: 12px;
        box-shadow: var(--shadow-elevation-1);
        overflow: hidden;
    }
    
    .category-header {
        background: linear-gradient(135deg, var(--fl-primary), var(--fl-secondary));
        color: white;
        padding: 20px 24px;
        display: flex;
        align-items: center;
        gap: 16px;
    }
    
    .category-icon {
        width: 48px;
        height: 48px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
    }
    
    .category-info h2 {
        margin: 0 0 4px 0;
        font-size: 24px;
        font-weight: 600;
    }
    
    .category-description {
        font-size: 14px;
        opacity: 0.9;
        margin: 0;
    }
    
    .category-stats {
        display: flex;
        gap: 24px;
        font-size: 14px;
        margin-top: 8px;
    }
    
    /* Quality gates dashboard */
    .quality-gates-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 16px;
        margin: 24px 0;
    }
    
    .quality-gate-card {
        background: var(--fl-surface);
        border-radius: 8px;
        padding: 20px;
        border-left: 4px solid var(--gate-pending);
        box-shadow: var(--shadow-elevation-1);
        transition: all var(--transition-fast);
    }
    
    .quality-gate-card.passing {
        border-left-color: var(--gate-passing);
    }
    
    .quality-gate-card.failing {
        border-left-color: var(--gate-failing);
    }
    
    .quality-gate-card.warning {
        border-left-color: var(--gate-warning);
    }
    
    .quality-gate-card:hover {
        transform: translateX(4px);
        box-shadow: var(--shadow-elevation-2);
    }
    
    /* Trend visualization */
    .trend-chart {
        height: 200px;
        background: var(--fl-background);
        border-radius: 8px;
        border: 1px solid var(--fl-border);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--fl-text-secondary);
        font-style: italic;
        margin: 16px 0;
    }
    
    /* Performance SLA indicators */
    .sla-indicator {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 4px 12px;
        border-radius: 16px;
        font-size: 12px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .sla-indicator.met {
        background: rgba(76, 175, 80, 0.1);
        color: var(--fl-success);
        border: 1px solid var(--fl-success);
    }
    
    .sla-indicator.exceeded {
        background: rgba(244, 67, 54, 0.1);
        color: var(--fl-error);
        border: 1px solid var(--fl-error);
    }
    
    /* Responsive design adjustments */
    @media (max-width: 768px) {
        .dashboard-grid {
            grid-template-columns: 1fr;
            gap: 16px;
            margin: 16px 0;
        }
        
        .coverage-ring {
            width: 100px;
            height: 100px;
        }
        
        .coverage-ring::before {
            width: 70px;
            height: 70px;
        }
        
        .coverage-percentage {
            font-size: 20px;
        }
        
        .category-header {
            padding: 16px 20px;
        }
        
        .category-icon {
            width: 40px;
            height: 40px;
            font-size: 20px;
        }
        
        .quality-gates-grid {
            grid-template-columns: 1fr;
        }
    }
    
    /* Print optimizations */
    @media print {
        .dashboard-card {
            break-inside: avoid;
            box-shadow: none;
            border: 1px solid #ccc;
        }
        
        .trend-chart {
            border: 1px solid #ccc;
            background: white;
        }
        
        .coverage-ring {
            background: white;
            border: 2px solid #333;
        }
    }
    </style>
</head>

<body>
    <!-- Skip link for accessibility -->
    <a href="#main-content" class="skip-link">Skip to main content</a>
    
    <!-- Page Header with Neuroscience Research Branding -->
    <header class="header" role="banner">
        <div class="container">
            <div class="header-content">
                <div class="header-brand">
                    {% if config.report_formats.html.header.include_logo %}
                    <div class="header-logo" aria-hidden="true">
                        🧠
                    </div>
                    {% endif %}
                    <div class="header-title-group">
                        <h1 class="header-title">{{ config.report_formats.html.header.project_name | default('FlyrigLoader') }}</h1>
                        <p class="header-subtitle">{{ config.report_formats.html.header.subtitle | default('Neuroscience Data Loading Library') }}</p>
                    </div>
                </div>
                
                {% if config.report_formats.html.header.build_info %}
                <div class="header-meta" role="region" aria-label="Build information">
                    {% if config.report_formats.html.header.timestamp %}
                    <div class="header-meta-item">
                        <span aria-label="Report generated">📅</span>
                        <span>{{ report.timestamp | default('now') }}</span>
                    </div>
                    {% endif %}
                    
                    {% if config.report_formats.html.header.python_version %}
                    <div class="header-meta-item">
                        <span aria-label="Python version">🐍</span>
                        <span>Python {{ report.python_version | default('3.8+') }}</span>
                    </div>
                    {% endif %}
                    
                    {% if config.report_formats.html.header.coverage_version %}
                    <div class="header-meta-item">
                        <span aria-label="Coverage tool version">📊</span>
                        <span>Coverage.py {{ report.coverage_version | default('7.0+') }}</span>
                    </div>
                    {% endif %}
                    
                    {% if config.report_formats.html.header.branch_info and report.branch_name %}
                    <div class="header-meta-item">
                        <span aria-label="Git branch">🌿</span>
                        <span>{{ report.branch_name }}</span>
                    </div>
                    {% endif %}
                    
                    {% if config.report_formats.html.header.commit_hash and report.commit_hash %}
                    <div class="header-meta-item">
                        <span aria-label="Git commit">🔗</span>
                        <span>{{ report.commit_hash[:8] }}</span>
                    </div>
                    {% endif %}
                </div>
                {% endif %}
            </div>
        </div>
    </header>

    <!-- Breadcrumb Navigation -->
    {% if config.report_formats.html.navigation.include_breadcrumbs %}
    <nav class="breadcrumbs" role="navigation" aria-label="Breadcrumb">
        <div class="container">
            <ol>
                <li><a href="{{ config.metadata.repository_url | default('#') }}">Repository</a></li>
                <li><a href="{{ config.metadata.documentation_url | default('#') }}">Documentation</a></li>
                <li aria-current="page">Coverage Report</li>
            </ol>
        </div>
    </nav>
    {% endif %}

    <!-- Main Content -->
    <main id="main-content" class="container" role="main">
        
        <!-- Coverage Summary Dashboard -->
        <section class="coverage-summary" aria-labelledby="summary-title">
            <h2 id="summary-title" class="section-title">
                📊 Coverage Dashboard Overview
            </h2>
            
            <div class="dashboard-grid">
                <!-- Overall Coverage Card -->
                <div class="dashboard-card {{ coverage.overall_class | default('good') }}" role="region" aria-labelledby="overall-coverage">
                    <div class="coverage-ring" style="--coverage-percentage: {{ coverage.overall_percentage | default(90) }};">
                        <div class="coverage-percentage" aria-label="{{ coverage.overall_percentage | default(90) }}% overall coverage">
                            {{ coverage.overall_percentage | default(90) }}%
                        </div>
                    </div>
                    <h3 id="overall-coverage" class="metric-label text-center">Overall Coverage</h3>
                    <div class="metric-fraction text-center">
                        {{ coverage.covered_lines | default(2150) }} of {{ coverage.total_lines | default(2387) }} lines covered
                    </div>
                    {% if coverage.overall_percentage >= config.quality_gates.thresholds.overall_coverage.minimum %}
                    <div class="sla-indicator met">
                        ✅ Quality Gate Passed
                    </div>
                    {% else %}
                    <div class="sla-indicator exceeded">
                        ❌ Below Threshold ({{ config.quality_gates.thresholds.overall_coverage.minimum }}%)
                    </div>
                    {% endif %}
                </div>

                <!-- Branch Coverage Card -->
                <div class="dashboard-card {{ coverage.branch_class | default('good') }}" role="region" aria-labelledby="branch-coverage">
                    <div class="coverage-ring" style="--coverage-percentage: {{ coverage.branch_percentage | default(87) }};">
                        <div class="coverage-percentage" aria-label="{{ coverage.branch_percentage | default(87) }}% branch coverage">
                            {{ coverage.branch_percentage | default(87) }}%
                        </div>
                    </div>
                    <h3 id="branch-coverage" class="metric-label text-center">Branch Coverage</h3>
                    <div class="metric-fraction text-center">
                        {{ coverage.covered_branches | default(435) }} of {{ coverage.total_branches | default(501) }} branches covered
                    </div>
                    {% if coverage.branch_percentage >= config.quality_gates.thresholds.branch_coverage.minimum %}
                    <div class="sla-indicator met">
                        ✅ Quality Gate Passed
                    </div>
                    {% else %}
                    <div class="sla-indicator exceeded">
                        ❌ Below Threshold ({{ config.quality_gates.thresholds.branch_coverage.minimum }}%)
                    </div>
                    {% endif %}
                </div>

                <!-- Function Coverage Card -->
                <div class="dashboard-card {{ coverage.function_class | default('excellent') }}" role="region" aria-labelledby="function-coverage">
                    <div class="coverage-ring" style="--coverage-percentage: {{ coverage.function_percentage | default(96) }};">
                        <div class="coverage-percentage" aria-label="{{ coverage.function_percentage | default(96) }}% function coverage">
                            {{ coverage.function_percentage | default(96) }}%
                        </div>
                    </div>
                    <h3 id="function-coverage" class="metric-label text-center">Function Coverage</h3>
                    <div class="metric-fraction text-center">
                        {{ coverage.covered_functions | default(128) }} of {{ coverage.total_functions | default(134) }} functions covered
                    </div>
                    {% if coverage.function_percentage >= config.quality_gates.thresholds.function_coverage.minimum %}
                    <div class="sla-indicator met">
                        ✅ Quality Gate Passed
                    </div>
                    {% else %}
                    <div class="sla-indicator exceeded">
                        ❌ Below Threshold ({{ config.quality_gates.thresholds.function_coverage.minimum }}%)
                    </div>
                    {% endif %}
                </div>

                <!-- Critical Modules Status Card -->
                <div class="dashboard-card {{ coverage.critical_class | default('excellent') }}" role="region" aria-labelledby="critical-coverage">
                    <div class="coverage-ring" style="--coverage-percentage: {{ coverage.critical_percentage | default(98) }};">
                        <div class="coverage-percentage" aria-label="{{ coverage.critical_percentage | default(98) }}% critical module coverage">
                            {{ coverage.critical_percentage | default(98) }}%
                        </div>
                    </div>
                    <h3 id="critical-coverage" class="metric-label text-center">Critical Modules</h3>
                    <div class="metric-fraction text-center">
                        API, Configuration, Discovery, I/O Pipeline
                    </div>
                    {% if coverage.critical_percentage >= config.quality_gates.thresholds.critical_modules.minimum %}
                    <div class="sla-indicator met">
                        ✅ Research Quality Standards Met
                    </div>
                    {% else %}
                    <div class="sla-indicator exceeded">
                        ❌ Critical: Requires 100% Coverage
                    </div>
                    {% endif %}
                </div>
            </div>

            <!-- Coverage Trend Visualization -->
            {% if config.trend_analysis.historical_tracking.enabled %}
            <div class="trend-section">
                <h3>📈 Coverage Trends</h3>
                <div class="trend-chart" role="img" aria-label="Coverage trend chart placeholder">
                    Coverage trend visualization will be rendered here
                    <br><small>Historical data: {{ config.trend_analysis.historical_tracking.retention_days }} days retention</small>
                </div>
            </div>
            {% endif %}
        </section>

        <!-- Quality Gates Status -->
        <section aria-labelledby="quality-gates-title">
            <h2 id="quality-gates-title" class="section-title">
                🚦 Quality Gates Status
            </h2>
            
            <div class="quality-gates-grid">
                <div class="quality-gate-card {{ 'passing' if coverage.overall_percentage >= config.quality_gates.thresholds.overall_coverage.minimum else 'failing' }}">
                    <div class="quality-gate-header">
                        <h3 class="quality-gate-title">Overall Coverage</h3>
                        <span class="quality-gate-status {{ 'passing' if coverage.overall_percentage >= config.quality_gates.thresholds.overall_coverage.minimum else 'failing' }}">
                            {{ 'PASSING' if coverage.overall_percentage >= config.quality_gates.thresholds.overall_coverage.minimum else 'FAILING' }}
                        </span>
                    </div>
                    <p>Target: ≥{{ config.quality_gates.thresholds.overall_coverage.minimum }}% | Current: {{ coverage.overall_percentage | default(90) }}%</p>
                </div>

                <div class="quality-gate-card {{ 'passing' if coverage.critical_percentage >= config.quality_gates.thresholds.critical_modules.minimum else 'failing' }}">
                    <div class="quality-gate-header">
                        <h3 class="quality-gate-title">Critical Modules</h3>
                        <span class="quality-gate-status {{ 'passing' if coverage.critical_percentage >= config.quality_gates.thresholds.critical_modules.minimum else 'failing' }}">
                            {{ 'PASSING' if coverage.critical_percentage >= config.quality_gates.thresholds.critical_modules.minimum else 'FAILING' }}
                        </span>
                    </div>
                    <p>Target: {{ config.quality_gates.thresholds.critical_modules.minimum }}% | Current: {{ coverage.critical_percentage | default(98) }}%</p>
                </div>

                <div class="quality-gate-card {{ 'passing' if coverage.branch_percentage >= config.quality_gates.thresholds.branch_coverage.minimum else 'warning' }}">
                    <div class="quality-gate-header">
                        <h3 class="quality-gate-title">Branch Coverage</h3>
                        <span class="quality-gate-status {{ 'passing' if coverage.branch_percentage >= config.quality_gates.thresholds.branch_coverage.minimum else 'warning' }}">
                            {{ 'PASSING' if coverage.branch_percentage >= config.quality_gates.thresholds.branch_coverage.minimum else 'WARNING' }}
                        </span>
                    </div>
                    <p>Target: ≥{{ config.quality_gates.thresholds.branch_coverage.minimum }}% | Current: {{ coverage.branch_percentage | default(87) }}%</p>
                </div>

                {% if performance %}
                <div class="quality-gate-card {{ performance.overall_status | default('passing') }}">
                    <div class="quality-gate-header">
                        <h3 class="quality-gate-title">Performance SLA</h3>
                        <span class="quality-gate-status {{ performance.overall_status | default('passing') }}">
                            {{ performance.overall_status | upper | default('PASSING') }}
                        </span>
                    </div>
                    <p>Data Loading: {{ performance.data_loading_time | default('750ms') }} (Target: &lt;1s/100MB)</p>
                </div>
                {% endif %}
            </div>
        </section>

        <!-- Module Organization by Neuroscience Workflow -->
        <section aria-labelledby="modules-title">
            <h2 id="modules-title" class="section-title">
                🧬 Module Coverage by Research Domain
            </h2>

            <!-- Critical Data Pipeline Modules -->
            <div class="module-category">
                <div class="category-header">
                    <div class="category-icon" aria-hidden="true">🔬</div>
                    <div class="category-info">
                        <h2>Critical Data Pipeline</h2>
                        <p class="category-description">Core modules for experimental data loading, validation, and transformation</p>
                        <div class="category-stats">
                            <span>4 modules</span>
                            <span>Required: 100% coverage</span>
                            <span>Status: {{ 'Complete' if coverage.critical_percentage >= 100 else 'In Progress' }}</span>
                        </div>
                    </div>
                </div>
                
                <div class="file-tree">
                    {% for module in modules.critical | default([
                        {'name': 'api.py', 'path': 'src/flyrigloader/api.py', 'coverage': 98, 'class': 'excellent', 'description': 'High-level facade for experimental data loading'},
                        {'name': 'config/', 'path': 'src/flyrigloader/config/', 'coverage': 100, 'class': 'excellent', 'description': 'YAML configuration and discovery'},
                        {'name': 'discovery/', 'path': 'src/flyrigloader/discovery/', 'coverage': 95, 'class': 'excellent', 'description': 'File discovery and pattern matching'},
                        {'name': 'io/', 'path': 'src/flyrigloader/io/', 'coverage': 100, 'class': 'excellent', 'description': 'Data loading and transformation pipeline'}
                    ]) %}
                    <div class="file-tree-item">
                        <a href="{{ module.name | replace('/', '_') | replace('.py', '') }}.html" class="file-tree-link">
                            <div class="file-info">
                                <span class="file-name">{{ module.name }}</span>
                                <span class="file-description">{{ module.description }}</span>
                            </div>
                            <div class="file-stats">
                                <span class="coverage-badge {{ module.class }}">{{ module.coverage }}%</span>
                                <span class="file-meta">{{ module.lines | default('156') }} lines</span>
                            </div>
                        </a>
                    </div>
                    {% endfor %}
                </div>
            </div>

            <!-- Supporting Infrastructure Modules -->
            <div class="module-category">
                <div class="category-header" style="background: linear-gradient(135deg, var(--neuroscience-util), var(--fl-secondary));">
                    <div class="category-icon" aria-hidden="true">🛠️</div>
                    <div class="category-info">
                        <h2>Supporting Infrastructure</h2>
                        <p class="category-description">Utility functions, path management, and cross-platform compatibility</p>
                        <div class="category-stats">
                            <span>2 modules</span>
                            <span>Target: 95% coverage</span>
                            <span>Status: {{ 'Complete' if coverage.utilities_percentage >= 95 else 'In Progress' }}</span>
                        </div>
                    </div>
                </div>
                
                <div class="file-tree">
                    {% for module in modules.utilities | default([
                        {'name': 'utils/', 'path': 'src/flyrigloader/utils/', 'coverage': 92, 'class': 'good', 'description': 'Path utilities and DataFrame helpers'},
                        {'name': '__init__.py', 'path': 'src/flyrigloader/__init__.py', 'coverage': 85, 'class': 'good', 'description': 'Logging initialization and package setup'}
                    ]) %}
                    <div class="file-tree-item">
                        <a href="{{ module.name | replace('/', '_') | replace('.py', '') }}.html" class="file-tree-link">
                            <div class="file-info">
                                <span class="file-name">{{ module.name }}</span>
                                <span class="file-description">{{ module.description }}</span>
                            </div>
                            <div class="file-stats">
                                <span class="coverage-badge {{ module.class }}">{{ module.coverage }}%</span>
                                <span class="file-meta">{{ module.lines | default('78') }} lines</span>
                            </div>
                        </a>
                    </div>
                    {% endfor %}
                </div>
            </div>

            <!-- Test Infrastructure Modules -->
            {% if config.coverage_contexts.test_contexts %}
            <div class="module-category">
                <div class="category-header" style="background: linear-gradient(135deg, var(--neuroscience-config), var(--fl-accent));">
                    <div class="category-icon" aria-hidden="true">🧪</div>
                    <div class="category-info">
                        <h2>Test Infrastructure</h2>
                        <p class="category-description">Comprehensive test suites, fixtures, and quality assurance</p>
                        <div class="category-stats">
                            <span>{{ test_stats.total_tests | default(247) }} tests</span>
                            <span>{{ test_stats.test_files | default(18) }} test files</span>
                            <span>Execution: {{ test_stats.execution_time | default('1.8s') }}</span>
                        </div>
                    </div>
                </div>
                
                <div class="file-tree">
                    {% for test_type in ['Unit Tests', 'Integration Tests', 'Performance Benchmarks', 'Regression Tests'] %}
                    <div class="file-tree-item">
                        <div class="file-tree-link">
                            <div class="file-info">
                                <span class="file-name">{{ test_type }}</span>
                                <span class="file-description">{{ test_descriptions[test_type] | default('Comprehensive test coverage') }}</span>
                            </div>
                            <div class="file-stats">
                                <span class="coverage-badge excellent">{{ test_coverages[test_type] | default('100') }}%</span>
                                <span class="file-meta">{{ test_counts[test_type] | default('45') }} tests</span>
                            </div>
                        </div>
                    </div>
                    {% endfor %}
                </div>
            </div>
            {% endif %}
        </section>

        <!-- Performance and SLA Dashboard -->
        {% if config.report_formats.html.performance_section.include_benchmark_results %}
        <section aria-labelledby="performance-title">
            <h2 id="performance-title" class="section-title">
                ⚡ Performance SLA Compliance
            </h2>
            
            <div class="performance-section">
                <div class="dashboard-grid">
                    <div class="dashboard-card {{ 'excellent' if performance.data_loading_sla_met else 'poor' }}">
                        <h3>Data Loading Performance</h3>
                        <div class="metric-value">{{ performance.data_loading_time | default('750ms') }}</div>
                        <div class="metric-label">per 100MB</div>
                        <div class="sla-indicator {{ 'met' if performance.data_loading_sla_met else 'exceeded' }}">
                            SLA: {{ config.report_formats.html.performance_section.data_loading_sla | default('1s per 100MB') }}
                        </div>
                    </div>

                    <div class="dashboard-card {{ 'excellent' if performance.transformation_sla_met else 'poor' }}">
                        <h3>DataFrame Transformation</h3>
                        <div class="metric-value">{{ performance.transformation_time | default('320ms') }}</div>
                        <div class="metric-label">per 1M rows</div>
                        <div class="sla-indicator {{ 'met' if performance.transformation_sla_met else 'exceeded' }}">
                            SLA: {{ config.report_formats.html.performance_section.transformation_sla | default('500ms per 1M rows') }}
                        </div>
                    </div>

                    <div class="dashboard-card {{ 'excellent' if performance.discovery_sla_met else 'poor' }}">
                        <h3>File Discovery</h3>
                        <div class="metric-value">{{ performance.discovery_time | default('3.2s') }}</div>
                        <div class="metric-label">for 10K files</div>
                        <div class="sla-indicator {{ 'met' if performance.discovery_sla_met else 'exceeded' }}">
                            SLA: {{ config.report_formats.html.performance_section.discovery_sla | default('5s for 10,000 files') }}
                        </div>
                    </div>
                </div>

                {% if config.report_formats.html.performance_section.trend_charts %}
                <div class="trend-section">
                    <h3>Performance Trend Analysis</h3>
                    <div class="trend-chart" role="img" aria-label="Performance trend chart placeholder">
                        Performance trend visualization over time
                        <br><small>Regression alerts: {{ 'Enabled' if config.report_formats.html.performance_section.regression_alerts else 'Disabled' }}</small>
                    </div>
                </div>
                {% endif %}
            </div>
        </section>
        {% endif %}

        <!-- Quick Navigation Links -->
        {% if config.report_formats.html.navigation.quick_links %}
        <section aria-labelledby="quick-nav-title">
            <h2 id="quick-nav-title" class="section-title">
                🚀 Quick Navigation
            </h2>
            
            <div class="dashboard-grid">
                {% for link in config.report_formats.html.navigation.quick_links %}
                <a href="{{ link.path }}" class="dashboard-card {{ 'critical' if link.critical else 'good' }}" style="text-decoration: none; color: inherit;">
                    <h3>{{ link.name }}</h3>
                    <p>{{ link.description | default('Detailed coverage analysis') }}</p>
                    <div class="sla-indicator met">
                        {{ 'Critical Module' if link.critical else 'Standard Module' }}
                    </div>
                </a>
                {% endfor %}
            </div>
        </section>
        {% endif %}

        <!-- Footer Information -->
        <footer class="coverage-footer" role="contentinfo">
            <div class="footer-content">
                <div class="footer-section">
                    <h3>Coverage Report Information</h3>
                    <p>Generated by {{ config.metadata.created_by | default('FlyrigLoader Coverage Enhancement System') }}</p>
                    <p>Schema Version: {{ config.metadata.schema_version | default('2.1.12') }}</p>
                    <p>Report Format: {{ config.report_formats.html.format_version | default('HTML 5.0') }}</p>
                </div>
                
                <div class="footer-section">
                    <h3>Quality Standards</h3>
                    <p>Overall Coverage: ≥{{ config.quality_gates.thresholds.overall_coverage.minimum }}%</p>
                    <p>Critical Modules: {{ config.quality_gates.thresholds.critical_modules.minimum }}%</p>
                    <p>Branch Coverage: ≥{{ config.quality_gates.thresholds.branch_coverage.minimum }}%</p>
                </div>
                
                <div class="footer-section">
                    <h3>Resources</h3>
                    {% if config.metadata.repository_url %}
                    <p><a href="{{ config.metadata.repository_url }}">📂 Repository</a></p>
                    {% endif %}
                    {% if config.metadata.documentation_url %}
                    <p><a href="{{ config.metadata.documentation_url }}">📚 Documentation</a></p>
                    {% endif %}
                    <p><a href="#top">⬆️ Back to Top</a></p>
                </div>
            </div>
            
            <div class="footer-bottom">
                <p>&copy; {{ report.year | default('2024') }} {{ config.metadata.organization | default('Research Team') }}. 
                Licensed under {{ config.metadata.license | default('MIT') }}.</p>
                <p><small>Neuroscience research domain styling optimized for flyrigloader experimental data analysis workflows.</small></p>
            </div>
        </footer>
    </main>

    <!-- JavaScript for Enhanced Interactivity -->
    <script>
    // Progressive enhancement: Enable JavaScript features
    document.documentElement.classList.remove('no-js');
    document.documentElement.classList.add('js');

    // Coverage ring animation
    function animateCoverageRings() {
        const rings = document.querySelectorAll('.coverage-ring');
        
        rings.forEach(ring => {
            const percentage = ring.style.getPropertyValue('--coverage-percentage') || 0;
            let currentPercentage = 0;
            const increment = percentage / 50; // 50 animation frames
            
            const animate = () => {
                if (currentPercentage < percentage) {
                    currentPercentage += increment;
                    ring.style.setProperty('--coverage-percentage', Math.min(currentPercentage, percentage));
                    requestAnimationFrame(animate);
                }
            };
            
            // Start animation when element comes into view
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        animate();
                        observer.unobserve(entry.target);
                    }
                });
            });
            
            observer.observe(ring);
        });
    }

    // Enhanced keyboard navigation
    function setupKeyboardNavigation() {
        document.addEventListener('keydown', (event) => {
            // Quick navigation shortcuts
            if (event.altKey) {
                switch(event.key) {
                    case '1':
                        event.preventDefault();
                        document.getElementById('summary-title')?.scrollIntoView({ behavior: 'smooth' });
                        break;
                    case '2':
                        event.preventDefault();
                        document.getElementById('quality-gates-title')?.scrollIntoView({ behavior: 'smooth' });
                        break;
                    case '3':
                        event.preventDefault();
                        document.getElementById('modules-title')?.scrollIntoView({ behavior: 'smooth' });
                        break;
                    case '4':
                        event.preventDefault();
                        document.getElementById('performance-title')?.scrollIntoView({ behavior: 'smooth' });
                        break;
                }
            }
        });
    }

    // Accessibility enhancements
    function enhanceAccessibility() {
        // Add ARIA live regions for dynamic content
        const coverageCards = document.querySelectorAll('.dashboard-card');
        coverageCards.forEach(card => {
            card.setAttribute('tabindex', '0');
            card.addEventListener('focus', () => {
                card.setAttribute('aria-expanded', 'true');
            });
            card.addEventListener('blur', () => {
                card.setAttribute('aria-expanded', 'false');
            });
        });

        // Enhanced tooltip support
        const elements = document.querySelectorAll('[title]');
        elements.forEach(element => {
            const title = element.getAttribute('title');
            element.setAttribute('aria-label', title);
            
            // Add keyboard support for tooltips
            element.addEventListener('focus', () => {
                element.setAttribute('data-tooltip-visible', 'true');
            });
            element.addEventListener('blur', () => {
                element.removeAttribute('data-tooltip-visible');
            });
        });
    }

    // Performance monitoring
    function monitorPerformance() {
        if ('performance' in window) {
            window.addEventListener('load', () => {
                const loadTime = performance.now();
                console.log(`Coverage dashboard loaded in ${loadTime.toFixed(2)}ms`);
                
                // Report to analytics if enabled
                {% if config.integration_settings.monitoring.prometheus_metrics %}
                if (typeof gtag !== 'undefined') {
                    gtag('event', 'dashboard_load_time', {
                        'custom_parameter': loadTime,
                        'coverage_percentage': {{ coverage.overall_percentage | default(90) }}
                    });
                }
                {% endif %}
            });
        }
    }

    // Search functionality for modules
    {% if config.report_formats.html.navigation.search_functionality %}
    function setupModuleSearch() {
        const searchInput = document.createElement('input');
        searchInput.type = 'search';
        searchInput.placeholder = 'Search modules...';
        searchInput.className = 'module-search';
        searchInput.setAttribute('aria-label', 'Search modules');
        
        const modulesSection = document.getElementById('modules-title');
        if (modulesSection) {
            modulesSection.after(searchInput);
            
            searchInput.addEventListener('input', (event) => {
                const searchTerm = event.target.value.toLowerCase();
                const moduleItems = document.querySelectorAll('.file-tree-item');
                
                moduleItems.forEach(item => {
                    const moduleName = item.querySelector('.file-name')?.textContent.toLowerCase();
                    const moduleDesc = item.querySelector('.file-description')?.textContent.toLowerCase();
                    
                    const matches = moduleName?.includes(searchTerm) || moduleDesc?.includes(searchTerm);
                    item.style.display = matches ? 'block' : 'none';
                });
            });
        }
    }
    {% endif %}

    // Error handling with graceful degradation
    function setupErrorHandling() {
        window.addEventListener('error', (event) => {
            console.warn('Coverage dashboard error:', event.error);
            // Ensure basic functionality continues to work
        });
        
        // Handle missing data gracefully
        const requiredElements = ['#summary-title', '#modules-title'];
        requiredElements.forEach(selector => {
            if (!document.querySelector(selector)) {
                console.warn(`Missing required element: ${selector}`);
            }
        });
    }

    // Initialize all features when DOM is ready
    document.addEventListener('DOMContentLoaded', () => {
        animateCoverageRings();
        setupKeyboardNavigation();
        enhanceAccessibility();
        monitorPerformance();
        {% if config.report_formats.html.navigation.search_functionality %}
        setupModuleSearch();
        {% endif %}
        setupErrorHandling();
        
        // Set focus to main content for screen readers
        const mainContent = document.getElementById('main-content');
        if (mainContent) {
            mainContent.setAttribute('tabindex', '-1');
        }
        
        console.log('FlyrigLoader Coverage Dashboard initialized successfully');
    });
    </script>

    <!-- Analytics Integration -->
    {% if config.integration_settings.external_tools.monitoring %}
    <script>
    // Lightweight analytics for coverage dashboard usage
    if (typeof gtag !== 'undefined') {
        gtag('event', 'coverage_dashboard_view', {
            'overall_coverage': {{ coverage.overall_percentage | default(90) }},
            'critical_coverage': {{ coverage.critical_percentage | default(98) }},
            'branch_coverage': {{ coverage.branch_percentage | default(87) }},
            'quality_gates_passing': {{ 'true' if coverage.overall_percentage >= config.quality_gates.thresholds.overall_coverage.minimum else 'false' }},
            'report_timestamp': '{{ report.timestamp | default("") }}'
        });
    }
    </script>
    {% endif %}
</body>
</html>
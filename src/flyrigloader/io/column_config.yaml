# Default column configuration for flyrigloader experiment data
# This is the PREFERRED configuration format, which utilizes Pydantic validation
# for maximum type safety and clear error messages.
#
# This YAML file demonstrates all available options for column definitions
# and serves as a template for calling projects to use when creating their own
# configuration files.

columns:
  # Time dimension (required)
  # Shows a minimal required column definition
  t:
    type: numpy.ndarray
    dimension: 1  # 1 = 1D array, 2 = 2D array, 3 = 3D array
    required: true  # must be present in data
    description: Time values

  # Position and tracking
  # Basic column definition with all standard fields
  trjn:
    type: numpy.ndarray  # Python type (str, int, float, numpy.ndarray, etc.)
    dimension: 1  # Only needed for array types
    required: true  # Whether the column must be present (default: false)
    description: Trajectory number  # Human-readable description
  
  # Example with alias - allows the column to be found under another name
  x:
    type: numpy.ndarray
    dimension: 1
    required: true 
    description: X position
    # alias: x_position  # Uncomment to use an alias
  
  # Example with default value - used if column is missing
  y:
    type: numpy.ndarray
    dimension: 1
    required: true
    description: Y position
    # default_value: null  # Uncomment to specify a default value
  
  # Example with special handling - 2D array demonstration
  signal_disp:
    type: numpy.ndarray
    dimension: 2  # This is a 2D array
    required: false
    description: Signal display data
    special_handling: transform_to_match_time_dimension  # Special processing directive
  
  # Example showing extract_first_column handler
  signal:
    type: numpy.ndarray
    dimension: 1
    required: false
    description: Primary signal
    default_value: null
    special_handling: extract_first_column_if_2d  # Extract first column if 2D array
  
  # Orientation and movement
  theta:
    type: numpy.ndarray
    dimension: 1
    required: true
    description: Orientation angle
  
  theta_smooth:
    type: numpy.ndarray
    dimension: 1
    required: true
    description: Smoothed orientation angle
  
  dtheta:
    type: numpy.ndarray
    dimension: 1
    required: true
    description: Smoothed angular velocity
    alias: dtheta_smooth
  
  vx:
    type: numpy.ndarray
    dimension: 1
    required: true
    description: Smoothed X velocity
    alias: vx_smooth
  
  vy:
    type: numpy.ndarray
    dimension: 1
    required: true
    description: Smoothed Y velocity
    alias: vy_smooth
  
  spd:
    type: numpy.ndarray
    dimension: 1
    required: true
    description: Smoothed speed
    alias: spd_smooth
  
  # Event markers
  jump:
    type: numpy.ndarray
    dimension: 1
    required: true
    description: Jump event markers
    alias: jumps
  
  # Metadata example - not in raw data but added during processing
  date:
    type: str
    required: false
    description: Experiment date
    is_metadata: true  # This marks it as a metadata field
  
  # Another metadata example 
  exp_name:
    type: str
    required: false
    description: Experiment name
    is_metadata: true
    
  rig:
    type: str
    required: false
    description: Rig name
    is_metadata: true

# Special handler definitions 
# Maps handler type names to implementation function names
special_handlers:
  # Format: handler_type_name: function_name
  transform_to_match_time_dimension: _handle_signal_disp
  extract_first_column_if_2d: _extract_first_column
